definitions:
  auth.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  auth.LoginResponse:
    properties:
      token:
        type: string
    type: object
  content.GenerateContentResponse:
    properties:
      content:
        type: string
      status:
        $ref: '#/definitions/httpx.Status'
    type: object
  domain.Post:
    properties:
      audience:
        allOf:
        - $ref: '#/definitions/domain.UserLvl'
        example: beginner
      content:
        example: Польза протеина в диете
        type: string
      id:
        example: 123
        type: integer
      images:
        example:
        - image1.jpg
        - image2.jpg
        items:
          type: string
        type: array
    type: object
  domain.UserLvl:
    enum:
    - default
    - beginner
    - intermediate
    - advanced
    type: string
    x-enum-varnames:
    - UserLvlDefault
    - UserLvlBeginner
    - UserLvlIntermediate
    - UserLvlAdvanced
  httpx.Response:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Запрос выполнен успешно
        type: string
      status:
        allOf:
        - $ref: '#/definitions/httpx.Status'
        example: success
    type: object
  httpx.Status:
    enum:
    - success
    - error
    type: string
    x-enum-varnames:
    - StatusSuccess
    - StatusError
info:
  contact: {}
  description: Описание API для сервиса FitFlow
  title: FitFlow API
  version: 0.0.1
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Учетные записи администратора создаются через cli утилиту
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Неверный формат данных
          schema:
            $ref: '#/definitions/httpx.Response'
        "401":
          description: Неверные данные для входа
          schema:
            $ref: '#/definitions/httpx.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpx.Response'
      summary: Вход в учетную запись администратора
      tags:
      - auth
  /content/generate:
    get:
      consumes:
      - application/json
      description: Генерирует контент для телеграм поста на заданную тему с помощью
        AI
      parameters:
      - description: Тема контента
        in: query
        name: theme
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/content.GenerateContentResponse'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/httpx.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpx.Response'
      summary: Генерация контента для поста
      tags:
      - content
  /content/post:
    post:
      consumes:
      - multipart/form-data
      description: Сохраняет пост в бд, сохраняет изображения в s3
      parameters:
      - description: Список изображений (можно несколько)
        in: formData
        name: images
        required: true
        type: file
      - description: Текст поста
        in: formData
        name: content
        required: true
        type: string
      - description: Аудитория (beginner, intermediate, advanced)
        in: formData
        name: audience
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Post'
        "400":
          description: Неверные данные в запросе
          schema:
            $ref: '#/definitions/httpx.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpx.Response'
      summary: Создание нового поста
      tags:
      - content
  /content/post/{id}:
    delete:
      parameters:
      - description: ID поста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Пост успешно удалён
          schema:
            $ref: '#/definitions/httpx.Response'
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/httpx.Response'
        "404":
          description: Пост не найден
          schema:
            $ref: '#/definitions/httpx.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpx.Response'
      summary: Удаление поста
      tags:
      - content
  /content/posts:
    get:
      parameters:
      - default: default
        description: Уровень пользователя (beginner, intermediate, advanced)
        in: query
        name: audience
        type: string
      - description: Фильтр по публикации (true - не опубликованные, false - все)
        in: query
        name: incoming
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Список постов
          schema:
            items:
              $ref: '#/definitions/domain.Post'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpx.Response'
      summary: Получение постов
      tags:
      - content
swagger: "2.0"
